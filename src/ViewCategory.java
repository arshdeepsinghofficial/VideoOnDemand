
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.AbstractTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author hp
 */
public class ViewCategory extends javax.swing.JInternalFrame
{

    /**
     * Creates new form ViewCategory
     */
    ArrayList<Category> al;
    MyProjectModel tm;

    public ViewCategory()
    {
        initComponents();
        al = new ArrayList<>();
        try
        {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/vod", "root", "system");
            Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            ResultSet rs = stmt.executeQuery("select * from category");
            int s = 1;

            while (rs.next())
            {
                // String serialno=s+"";
                String name = rs.getString("cname");
                String desc = rs.getString("cdesc");
                String photo = rs.getString("cphoto");
                al.add(new Category(s, name, desc, photo));
                s++;
            }
            tm = new MyProjectModel();
            jtable.setModel(tm);

        } catch (Exception ex)
        {

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtable = new javax.swing.JTable();
        btdelete = new javax.swing.JButton();
        btedit = new javax.swing.JButton();
        btrefresh = new javax.swing.JButton();

        jButton1.setText("jButton1");

        getContentPane().setLayout(null);

        jtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {

            }
        ));
        jScrollPane1.setViewportView(jtable);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 11, 390, 266);

        btdelete.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btdelete.setText("Delete");
        btdelete.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btdeleteActionPerformed(evt);
            }
        });
        getContentPane().add(btdelete);
        btdelete.setBounds(270, 290, 129, 30);

        btedit.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btedit.setText("Edit");
        btedit.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                bteditActionPerformed(evt);
            }
        });
        getContentPane().add(btedit);
        btedit.setBounds(10, 290, 130, 30);

        btrefresh.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btrefresh.setText("Refresh");
        btrefresh.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btrefreshActionPerformed(evt);
            }
        });
        getContentPane().add(btrefresh);
        btrefresh.setBounds(150, 290, 110, 30);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btdeleteActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btdeleteActionPerformed
    {//GEN-HEADEREND:event_btdeleteActionPerformed
        int index = jtable.getSelectedRow();

        if (index == -1)
        {
            JOptionPane.showMessageDialog(this, "Please select Category first!!");

        } else if (index != -1)
        {
            String name = al.get(index).cname;
            if (JOptionPane.showConfirmDialog(this, "Are you sure to delete category '" + name + "'", "Delete", JOptionPane.YES_NO_OPTION) == 0)
            {

                try
                {
                    Class.forName("com.mysql.jdbc.Driver");
                    Connection conn = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/vod", "root", "system");
                    Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
                    ResultSet rs = stmt.executeQuery("select * from category where cname='" + name + "'");
                    if (rs.next())
                    {

                        rs.deleteRow();
                        al.remove(jtable.getSelectedRow());
                        tm.fireTableDataChanged();
                        JOptionPane.showMessageDialog(ViewCategory.this, "Category Deleted ");
                        
                    }
                } catch (Exception ex)
                {
                    ex.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_btdeleteActionPerformed

    private void bteditActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_bteditActionPerformed
    {//GEN-HEADEREND:event_bteditActionPerformed
        int index = jtable.getSelectedRow();
        if (index == -1)
        {
            JOptionPane.showMessageDialog(this, "Please select category first");
        } else
        {
            String name = al.get(index).cname;
            String desc = al.get(index).cdesc;
            String photo = al.get(index).cphoto;
            EditCategory ec = new EditCategory(name, desc, photo);
            ec.setIconifiable(true);
            ec.setMaximizable(true);
            ec.setClosable(true);
            ec.setSize(485,435);
            this.getDesktopPane().add(ec);
            ec.moveToFront();
            ec.setVisible(true);
        }
    }//GEN-LAST:event_bteditActionPerformed

    private void btrefreshActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btrefreshActionPerformed
    {//GEN-HEADEREND:event_btrefreshActionPerformed
         try
        {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/vod", "root", "system");
            Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            ResultSet rs = stmt.executeQuery("select * from category");
            int s = 1;
            al.clear();
            while (rs.next())
            {
                // String serialno=s+"";
                String name = rs.getString("cname");
                String desc = rs.getString("cdesc");
                String photo = rs.getString("cphoto");
                al.add(new Category(s, name, desc, photo));
                s++;
            }
            tm = new MyProjectModel();
            jtable.setModel(tm);

        } 
        catch (Exception ex)
        {
          ex.printStackTrace();
    }//GEN-LAST:event_btrefreshActionPerformed

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btdelete;
    private javax.swing.JButton btedit;
    private javax.swing.JButton btrefresh;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtable;
    // End of variables declaration//GEN-END:variables

    class Category
    {

        int s;
        String cname;
        String cdesc;
        String cphoto;

        Category(int s, String cname, String cdesc, String cphoto)
        {
            this.s = s;
            this.cname = cname;
            this.cdesc = cdesc;
            this.cphoto = cphoto;
        }
    }

    class MyProjectModel extends AbstractTableModel
    {

        String name[] =
        {
            "S.No.", "Category Name", "Category Description", "Category Photo"
        };

        public int getRowCount()
        {
            return al.size();
        }

        public int getColumnCount()
        {
            return 4;
        }

        public Object getValueAt(int row, int col)
        {
            Category c = al.get(row);
            if (col == 0)
            {
                return c.s;
            } else if (col == 1)
            {
                return c.cname;
            } else if (col == 2)
            {
                return c.cdesc;
            } else
            {
                return c.cphoto;
            }
        }

        public String getColumnName(int col)
        {
            return name[col];
        }
    }

}
