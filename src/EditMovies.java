
import java.awt.Image;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import java.io.*;

public class EditMovies extends javax.swing.JInternalFrame
{

    String movietitle;
    File f;

    public EditMovies(String cname, String genre, String producer, String director, String storyline,
            String releasedate, String id, String movietitle, String duration, String rating, String language, String coverphoto, String cast, String squarephoto, String videopath, String trailerpath)
    {
        
        this.movietitle = movietitle;
        initComponents();
        cbCategory();
        cbGenre();
        cbname.setSelectedItem(cname);
        if (cbname.getSelectedItem().equals("TV Shows"))
        {
            jLabel16.setEnabled(false);
            btvideobrowse.setEnabled(false);
            lbvideopath.setEnabled(false);
            jLabel17.setEnabled(false);
            bttrailerbrowse.setEnabled(false);
            lbtrailerpath.setEnabled(false);
            jLabel10.setEnabled(false);
            tfhh.setEnabled(false);
            tfmm.setEnabled(false);
        }
        cbname.setEnabled(false);
        cbgenre.setSelectedItem(genre);
        tfproducer.setText(producer);
        tfdirector.setText(director);
        tastoryline.setText(storyline);
        tfid.setText(id);
        //  datespinner.setValue(releasedate);
        datespinner.setEnabled(false);
        tftitle.setText(movietitle);
        tfhh.setText(duration.substring(0, 1));
        tfmm.setText(duration.substring(2, 4));
        cbrating.setSelectedItem(rating);
        cblanguage.setSelectedItem(language);
        lbcover.setText(coverphoto);
        lbsquare.setText(squarephoto);
        try
        {
            Image img = ImageIO.read(new File(lbsquare.getText())).getScaledInstance(lbsquare.getWidth(), lbsquare.getHeight(), Image.SCALE_SMOOTH);
            ImageIcon icon = new ImageIcon(img);
            lbsquare.setIcon(icon);
        } catch (Exception e)
        {
            e.printStackTrace();
        }
        try
        {
           
            Image img = ImageIO.read(new File(lbcover.getText())).getScaledInstance(lbcover.getWidth(), lbcover.getHeight(), Image.SCALE_SMOOTH);
            ImageIcon icon = new ImageIcon(img);
            lbcover.setIcon(icon);
        } catch (Exception e)
        {
            e.printStackTrace();
        }
        tfcast.setText(cast);
        lbvideopath.setText(videopath);
        lbtrailerpath.setText(trailerpath);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        cbname = new javax.swing.JComboBox<>();
        cbgenre = new javax.swing.JComboBox<>();
        tfproducer = new javax.swing.JTextField();
        tfdirector = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tastoryline = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        datespinner = new javax.swing.JSpinner();
        tftitle = new javax.swing.JTextField();
        tfhh = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        tfmm = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        cbrating = new javax.swing.JComboBox<>();
        cblanguage = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        lbvideopath = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        btcoverbrowse = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        lbtrailerpath = new javax.swing.JLabel();
        btserverbrowse = new javax.swing.JButton();
        btaddtodatabase = new javax.swing.JButton();
        btvideobrowse = new javax.swing.JButton();
        bttrailerbrowse = new javax.swing.JButton();
        lbcover = new javax.swing.JLabel();
        lbsquare = new javax.swing.JLabel();
        tfcast = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        tfid = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();

        getContentPane().setLayout(null);

        cbname.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { }));
        cbname.addItemListener(new java.awt.event.ItemListener()
        {
            public void itemStateChanged(java.awt.event.ItemEvent evt)
            {
                cbnameItemStateChanged(evt);
            }
        });
        cbname.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cbnameActionPerformed(evt);
            }
        });
        getContentPane().add(cbname);
        cbname.setBounds(150, 10, 125, 34);

        cbgenre.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {  }));
        cbgenre.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cbgenreActionPerformed(evt);
            }
        });
        getContentPane().add(cbgenre);
        cbgenre.setBounds(150, 60, 125, 34);

        tfproducer.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                tfproducerActionPerformed(evt);
            }
        });
        getContentPane().add(tfproducer);
        tfproducer.setBounds(150, 110, 125, 34);
        getContentPane().add(tfdirector);
        tfdirector.setBounds(150, 150, 125, 34);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Category Name");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 10, 128, 35);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Genre");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(10, 60, 128, 34);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Producer");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(10, 100, 128, 33);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Director");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(10, 150, 128, 33);

        tastoryline.setColumns(20);
        tastoryline.setRows(5);
        jScrollPane1.setViewportView(tastoryline);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(150, 200, 166, 96);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Story Line");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(10, 200, 128, 32);
        getContentPane().add(datespinner);
        datespinner.setBounds(150, 320, 125, 28);
        getContentPane().add(tftitle);
        tftitle.setBounds(150, 430, 162, 31);

        tfhh.setText("00");
        getContentPane().add(tfhh);
        tfhh.setBounds(170, 500, 32, 30);

        jLabel6.setText("HH:");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(150, 500, 18, 30);

        jLabel7.setText("MM:");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(210, 500, 20, 30);

        tfmm.setText("00");
        getContentPane().add(tfmm);
        tfmm.setBounds(240, 500, 32, 30);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("Release Date");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(10, 320, 128, 28);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setText("Video Title");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(10, 430, 130, 31);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setText("Duration");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(10, 490, 130, 28);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setText("Rating");
        getContentPane().add(jLabel11);
        jLabel11.setBounds(589, 9, 110, 30);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setText("Language");
        getContentPane().add(jLabel12);
        jLabel12.setBounds(589, 58, 110, 34);

        cbrating.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "5 (Excellent)", "4 (Verygood)", "3 (Good)", "2 (Poor)","1 (Verypoor)" }));
        cbrating.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cbratingActionPerformed(evt);
            }
        });
        getContentPane().add(cbrating);
        cbrating.setBounds(709, 4, 125, 35);

        cblanguage.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "English", "Hindi", "Punjabi"}));
        cblanguage.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cblanguageActionPerformed(evt);
            }
        });
        getContentPane().add(cblanguage);
        cblanguage.setBounds(709, 59, 125, 34);

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel13.setText("Cover Photo");
        getContentPane().add(jLabel13);
        jLabel13.setBounds(590, 120, 110, 37);

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel14.setText("Square Photo");
        getContentPane().add(jLabel14);
        jLabel14.setBounds(590, 270, 100, 40);
        getContentPane().add(lbvideopath);
        lbvideopath.setBounds(710, 360, 166, 70);

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel16.setText(" Video Path");
        getContentPane().add(jLabel16);
        jLabel16.setBounds(590, 360, 110, 30);

        btcoverbrowse.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btcoverbrowse.setText("Browse...");
        btcoverbrowse.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btcoverbrowseActionPerformed(evt);
            }
        });
        getContentPane().add(btcoverbrowse);
        btcoverbrowse.setBounds(590, 160, 90, 23);

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel17.setText("Trailer Path");
        getContentPane().add(jLabel17);
        jLabel17.setBounds(590, 450, 110, 25);
        getContentPane().add(lbtrailerpath);
        lbtrailerpath.setBounds(710, 450, 166, 60);

        btserverbrowse.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btserverbrowse.setText("Browse...");
        btserverbrowse.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btserverbrowseActionPerformed(evt);
            }
        });
        getContentPane().add(btserverbrowse);
        btserverbrowse.setBounds(590, 310, 90, 30);

        btaddtodatabase.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btaddtodatabase.setText("Update");
        btaddtodatabase.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btaddtodatabaseActionPerformed(evt);
            }
        });
        getContentPane().add(btaddtodatabase);
        btaddtodatabase.setBounds(300, 540, 246, 73);

        btvideobrowse.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btvideobrowse.setText("Browse...");
        btvideobrowse.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btvideobrowseActionPerformed(evt);
            }
        });
        getContentPane().add(btvideobrowse);
        btvideobrowse.setBounds(590, 390, 89, 30);

        bttrailerbrowse.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bttrailerbrowse.setText("Browse...");
        bttrailerbrowse.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                bttrailerbrowseActionPerformed(evt);
            }
        });
        getContentPane().add(bttrailerbrowse);
        bttrailerbrowse.setBounds(590, 490, 80, 23);
        getContentPane().add(lbcover);
        lbcover.setBounds(712, 122, 160, 80);
        getContentPane().add(lbsquare);
        lbsquare.setBounds(710, 270, 160, 80);

        tfcast.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                tfcastActionPerformed(evt);
            }
        });
        getContentPane().add(tfcast);
        tfcast.setBounds(712, 213, 109, 33);

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel15.setText("cast");
        getContentPane().add(jLabel15);
        jLabel15.setBounds(590, 210, 120, 33);
        getContentPane().add(tfid);
        tfid.setBounds(150, 380, 121, 29);

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel18.setText("ID");
        getContentPane().add(jLabel18);
        jLabel18.setBounds(10, 380, 140, 29);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbnameItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_cbnameItemStateChanged
    {//GEN-HEADEREND:event_cbnameItemStateChanged
        if (cbname.getSelectedItem().equals("TV Shows"))
        {
            jLabel16.setEnabled(false);
            btvideobrowse.setEnabled(false);
            lbvideopath.setEnabled(false);
            jLabel17.setEnabled(false);
            bttrailerbrowse.setEnabled(false);
            lbtrailerpath.setEnabled(false);
            jLabel10.setEnabled(false);
            tfhh.setEnabled(false);
            tfmm.setEnabled(false);

        } else
        {
            jLabel6.setEnabled(true);
            btvideobrowse.setEnabled(true);
            lbvideopath.setEnabled(true);
            jLabel7.setEnabled(true);
            bttrailerbrowse.setEnabled(true);
            lbtrailerpath.setEnabled(true);
            jLabel10.setEnabled(true);
            tfhh.setEnabled(true);
            tfmm.setEnabled(true);
        }
    }//GEN-LAST:event_cbnameItemStateChanged

    private void cbgenreActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cbgenreActionPerformed
    {//GEN-HEADEREND:event_cbgenreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbgenreActionPerformed

    private void tfproducerActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_tfproducerActionPerformed
    {//GEN-HEADEREND:event_tfproducerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfproducerActionPerformed

    private void cbratingActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cbratingActionPerformed
    {//GEN-HEADEREND:event_cbratingActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbratingActionPerformed

    private void cblanguageActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cblanguageActionPerformed
    {//GEN-HEADEREND:event_cblanguageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cblanguageActionPerformed

    private void btcoverbrowseActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btcoverbrowseActionPerformed
    {//GEN-HEADEREND:event_btcoverbrowseActionPerformed
        try
        {
            JFileChooser jfilechooser = new JFileChooser();
            int ans = jfilechooser.showOpenDialog(this);
            if (ans == 0)
            {
                f = jfilechooser.getSelectedFile();
                lbcover.setText(f.getPath());
                Image img = ImageIO.read(f).getScaledInstance(lbcover.getWidth(), lbcover.getHeight(), Image.SCALE_SMOOTH);
                ImageIcon icon = new ImageIcon(img);
                lbcover.setIcon(icon);
            }

        } catch (Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btcoverbrowseActionPerformed

    private void btserverbrowseActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btserverbrowseActionPerformed
    {//GEN-HEADEREND:event_btserverbrowseActionPerformed
        try
        {
            JFileChooser jfilechooser = new JFileChooser();
            int ans = jfilechooser.showOpenDialog(this);
            if (ans == 0)
            {
                f = jfilechooser.getSelectedFile();
                // coverphoto = f.getPath();
                lbsquare.setText(f.getPath());
                Image img = ImageIO.read(f).getScaledInstance(lbsquare.getWidth(), lbsquare.getHeight(), Image.SCALE_SMOOTH);
                ImageIcon icon = new ImageIcon(img);
                lbsquare.setIcon(icon);
            }

        } catch (Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btserverbrowseActionPerformed

    private void btaddtodatabaseActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btaddtodatabaseActionPerformed
    {//GEN-HEADEREND:event_btaddtodatabaseActionPerformed
        try
        {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/vod", "root", "system");
            Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            // ResultSet rs = stmt.executeQuery("select * from video");

            //  rs.moveToInsertRow();
            String categoryname = cbname.getSelectedItem() + "";
            String genre = cbgenre.getSelectedItem() + "";
            String producer = tfproducer.getText();
            String director = tfdirector.getText();
            String storyline = tastoryline.getText();
            String releasedate = datespinner.getValue() + "";
            String id = tfid.getText();
            String videotitle = tftitle.getText();
            String durationhh = tfhh.getText();
            String durationmm = tfmm.getText();
            String duration = durationhh + ":" + durationmm;
            String rating = cbrating.getSelectedItem() + "";
            String language = cblanguage.getSelectedItem() + "";
            String coverphoto = lbcover.getText();
            String squarephoto = lbsquare.getText();
            String cast = tfcast.getText();
            String videopath = lbvideopath.getText();
            String trailerpath = lbtrailerpath.getText();
            if (producer.isEmpty())
            {
                JOptionPane.showMessageDialog(this, "Please fill Producer field");
            } else if (director.isEmpty())
            {
                JOptionPane.showMessageDialog(this, "Please fill director field");
            } else if (storyline.isEmpty())
            {
                JOptionPane.showMessageDialog(this, "Please fill storyline field");
            } else if (id.isEmpty())
            {
                JOptionPane.showMessageDialog(this, "Please fill id field");
            } else if (videotitle.isEmpty())
            {
                JOptionPane.showMessageDialog(this, "Please fill Video Title field");
            } else if (duration.equals(":") && (cbname.equals("TV Shows")))
            {

                {
                    JOptionPane.showMessageDialog(this, "Please fill Duration field");
                }
            } else if (coverphoto.isEmpty())
            {
                JOptionPane.showMessageDialog(this, "Please fill Cover Photo field");
            } else if (squarephoto.isEmpty())
            {
                JOptionPane.showMessageDialog(this, "Please fill Square Photo field");
            } else if (cast.isEmpty())
            {
                JOptionPane.showMessageDialog(this, "Please fill the Cast field");
            } else if (videopath.isEmpty() && (cbname.equals("TV Shows")))
            {
                if ((videopath.endsWith(".mp4")) && (videopath.endsWith(".mkv")))
                {
                    JOptionPane.showMessageDialog(this, "Only 'mp4' and'mkv' type file is allowed in videopath field");
                } else
                {
                    JOptionPane.showMessageDialog(this, "Please fill video field");
                }
            } else if (trailerpath.isEmpty() && (cbname.equals("TV Shows")))
            {
                if ((trailerpath.endsWith(".mp4")) && (videopath.endsWith(".mkv")))
                {
                    JOptionPane.showMessageDialog(this, "Only 'mp4' and'mkv' type file is allowed trailerpath field");
                } else
                {
                    JOptionPane.showMessageDialog(this, "Please fill Trailer path field");
                }
            } else
            {
                ResultSet rss = stmt.executeQuery("select * from video where title='" + movietitle + "'");

                if (rss.next())
                {
                    rss.updateString("genre", genre);
                    rss.updateString("producer", producer);
                    rss.updateString("director", director);
                    rss.updateString("storyline", storyline);
                    rss.updateString("releasedate", releasedate);
                    rss.updateString("id", id);
                    rss.updateString("title", videotitle);
                    rss.updateString("duration", duration);
                    rss.updateString("rating", rating);
                    rss.updateString("language", language);
                    rss.updateString("cast", tfcast.getText());
                    rss.updateString("coverphoto", coverphoto);
                    rss.updateString("squarephoto", squarephoto);
                    rss.updateString("videopath", videopath);
                    rss.updateString("trailerpath", trailerpath);
                    rss.updateRow();
                    JOptionPane.showMessageDialog(this, "Video Updated");
                    this.dispose();
                }

            }

        } catch (Exception ex)
        {
            ex.printStackTrace();
        }

    }//GEN-LAST:event_btaddtodatabaseActionPerformed

    private void btvideobrowseActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btvideobrowseActionPerformed
    {//GEN-HEADEREND:event_btvideobrowseActionPerformed
        try
        {
            JFileChooser jfilechooser = new JFileChooser();
            int ans = jfilechooser.showOpenDialog(this);
            if (ans == 0)
            {
                f = jfilechooser.getSelectedFile();
                lbvideopath.setText(f.getPath());

            }

        } catch (Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btvideobrowseActionPerformed

    private void bttrailerbrowseActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_bttrailerbrowseActionPerformed
    {//GEN-HEADEREND:event_bttrailerbrowseActionPerformed
        try
        {
            JFileChooser jfilechooser = new JFileChooser();
            int ans = jfilechooser.showOpenDialog(this);
            if (ans == 0)
            {
                f = jfilechooser.getSelectedFile();
                lbtrailerpath.setText(f.getPath());

            }

        } catch (Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_bttrailerbrowseActionPerformed

    private void cbnameActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cbnameActionPerformed
    {//GEN-HEADEREND:event_cbnameActionPerformed

    }//GEN-LAST:event_cbnameActionPerformed

    private void tfcastActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_tfcastActionPerformed
    {//GEN-HEADEREND:event_tfcastActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfcastActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btaddtodatabase;
    private javax.swing.JButton btcoverbrowse;
    private javax.swing.JButton btserverbrowse;
    private javax.swing.JButton bttrailerbrowse;
    private javax.swing.JButton btvideobrowse;
    private javax.swing.JComboBox<String> cbgenre;
    private javax.swing.JComboBox<String> cblanguage;
    private javax.swing.JComboBox<String> cbname;
    private javax.swing.JComboBox<String> cbrating;
    private javax.swing.JSpinner datespinner;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbcover;
    private javax.swing.JLabel lbsquare;
    private javax.swing.JLabel lbtrailerpath;
    private javax.swing.JLabel lbvideopath;
    private javax.swing.JTextArea tastoryline;
    private javax.swing.JTextField tfcast;
    private javax.swing.JTextField tfdirector;
    private javax.swing.JTextField tfhh;
    private javax.swing.JTextField tfid;
    private javax.swing.JTextField tfmm;
    private javax.swing.JTextField tfproducer;
    private javax.swing.JTextField tftitle;
    // End of variables declaration//GEN-END:variables
void cbCategory()
    {
        try
        {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/vod", "root", "system");
            Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            ResultSet rs = stmt.executeQuery("select * from category");
            while (rs.next())
            {
                cbname.addItem(rs.getString("cname"));
            }

        } catch (Exception e)
        {
        }

    }

    void cbGenre()
    {
        try
        {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/vod", "root", "system");
            Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            ResultSet rs = stmt.executeQuery("select * from genre");
            while (rs.next())
            {
                cbgenre.addItem(rs.getString("Genre Name"));
            }

        } catch (Exception e)
        {

        }

    }
}
